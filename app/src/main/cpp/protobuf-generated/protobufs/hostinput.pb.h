// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs/hostinput.proto

#ifndef PROTOBUF_protobufs_2fhostinput_2eproto__INCLUDED
#define PROTOBUF_protobufs_2fhostinput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace HostBuffers {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protobufs_2fhostinput_2eproto();
void protobuf_InitDefaults_protobufs_2fhostinput_2eproto();
void protobuf_AssignDesc_protobufs_2fhostinput_2eproto();
void protobuf_ShutdownFile_protobufs_2fhostinput_2eproto();

class EchoAck;
class HostBytes;
class HostMessage;
class Instruction;

// ===================================================================

class HostMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:HostBuffers.HostMessage) */ {
 public:
  HostMessage();
  virtual ~HostMessage();

  HostMessage(const HostMessage& from);

  inline HostMessage& operator=(const HostMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const HostMessage& default_instance();

  static const HostMessage* internal_default_instance();

  void Swap(HostMessage* other);

  // implements Message ----------------------------------------------

  inline HostMessage* New() const { return New(NULL); }

  HostMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HostMessage& from);
  void MergeFrom(const HostMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HostMessage* other);
  void UnsafeMergeFrom(const HostMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HostBuffers.Instruction instruction = 1;
  int instruction_size() const;
  void clear_instruction();
  static const int kInstructionFieldNumber = 1;
  const ::HostBuffers::Instruction& instruction(int index) const;
  ::HostBuffers::Instruction* mutable_instruction(int index);
  ::HostBuffers::Instruction* add_instruction();
  ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >*
      mutable_instruction();
  const ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >&
      instruction() const;

  // @@protoc_insertion_point(class_scope:HostBuffers.HostMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction > instruction_;
  friend void  protobuf_InitDefaults_protobufs_2fhostinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fhostinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fhostinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fhostinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HostMessage> HostMessage_default_instance_;

// -------------------------------------------------------------------

class Instruction : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:HostBuffers.Instruction) */ {
 public:
  Instruction();
  virtual ~Instruction();

  Instruction(const Instruction& from);

  inline Instruction& operator=(const Instruction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Instruction& default_instance();

  static const Instruction* internal_default_instance();

  void Swap(Instruction* other);

  // implements Message ----------------------------------------------

  inline Instruction* New() const { return New(NULL); }

  Instruction* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Instruction& from);
  void MergeFrom(const Instruction& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Instruction* other);
  void UnsafeMergeFrom(const Instruction& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Instruction)
  // @@protoc_insertion_point(class_scope:HostBuffers.Instruction)
 private:

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_protobufs_2fhostinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fhostinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fhostinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fhostinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Instruction> Instruction_default_instance_;

// -------------------------------------------------------------------

class HostBytes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:HostBuffers.HostBytes) */ {
 public:
  HostBytes();
  virtual ~HostBytes();

  HostBytes(const HostBytes& from);

  inline HostBytes& operator=(const HostBytes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const HostBytes& default_instance();

  static const HostBytes* internal_default_instance();

  void Swap(HostBytes* other);

  // implements Message ----------------------------------------------

  inline HostBytes* New() const { return New(NULL); }

  HostBytes* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const HostBytes& from);
  void MergeFrom(const HostBytes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HostBytes* other);
  void UnsafeMergeFrom(const HostBytes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes hoststring = 4;
  bool has_hoststring() const;
  void clear_hoststring();
  static const int kHoststringFieldNumber = 4;
  const ::std::string& hoststring() const;
  void set_hoststring(const ::std::string& value);
  void set_hoststring(const char* value);
  void set_hoststring(const void* value, size_t size);
  ::std::string* mutable_hoststring();
  ::std::string* release_hoststring();
  void set_allocated_hoststring(::std::string* hoststring);

  // @@protoc_insertion_point(class_scope:HostBuffers.HostBytes)
 private:
  inline void set_has_hoststring();
  inline void clear_has_hoststring();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hoststring_;
  friend void  protobuf_InitDefaults_protobufs_2fhostinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fhostinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fhostinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fhostinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HostBytes> HostBytes_default_instance_;

// -------------------------------------------------------------------

class EchoAck : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:HostBuffers.EchoAck) */ {
 public:
  EchoAck();
  virtual ~EchoAck();

  EchoAck(const EchoAck& from);

  inline EchoAck& operator=(const EchoAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const EchoAck& default_instance();

  static const EchoAck* internal_default_instance();

  void Swap(EchoAck* other);

  // implements Message ----------------------------------------------

  inline EchoAck* New() const { return New(NULL); }

  EchoAck* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EchoAck& from);
  void MergeFrom(const EchoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EchoAck* other);
  void UnsafeMergeFrom(const EchoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 echo_ack_num = 8;
  bool has_echo_ack_num() const;
  void clear_echo_ack_num();
  static const int kEchoAckNumFieldNumber = 8;
  ::google::protobuf::uint64 echo_ack_num() const;
  void set_echo_ack_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HostBuffers.EchoAck)
 private:
  inline void set_has_echo_ack_num();
  inline void clear_has_echo_ack_num();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 echo_ack_num_;
  friend void  protobuf_InitDefaults_protobufs_2fhostinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fhostinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fhostinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fhostinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EchoAck> EchoAck_default_instance_;

// ===================================================================

static const int kHostbytesFieldNumber = 2;
extern ::google::protobuf::internal::ExtensionIdentifier< ::HostBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::HostBuffers::HostBytes >, 11, false >
  hostbytes;
static const int kEchoackFieldNumber = 7;
extern ::google::protobuf::internal::ExtensionIdentifier< ::HostBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::HostBuffers::EchoAck >, 11, false >
  echoack;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HostMessage

// repeated .HostBuffers.Instruction instruction = 1;
inline int HostMessage::instruction_size() const {
  return instruction_.size();
}
inline void HostMessage::clear_instruction() {
  instruction_.Clear();
}
inline const ::HostBuffers::Instruction& HostMessage::instruction(int index) const {
  // @@protoc_insertion_point(field_get:HostBuffers.HostMessage.instruction)
  return instruction_.Get(index);
}
inline ::HostBuffers::Instruction* HostMessage::mutable_instruction(int index) {
  // @@protoc_insertion_point(field_mutable:HostBuffers.HostMessage.instruction)
  return instruction_.Mutable(index);
}
inline ::HostBuffers::Instruction* HostMessage::add_instruction() {
  // @@protoc_insertion_point(field_add:HostBuffers.HostMessage.instruction)
  return instruction_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >*
HostMessage::mutable_instruction() {
  // @@protoc_insertion_point(field_mutable_list:HostBuffers.HostMessage.instruction)
  return &instruction_;
}
inline const ::google::protobuf::RepeatedPtrField< ::HostBuffers::Instruction >&
HostMessage::instruction() const {
  // @@protoc_insertion_point(field_list:HostBuffers.HostMessage.instruction)
  return instruction_;
}

inline const HostMessage* HostMessage::internal_default_instance() {
  return &HostMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// Instruction

inline const Instruction* Instruction::internal_default_instance() {
  return &Instruction_default_instance_.get();
}
// -------------------------------------------------------------------

// HostBytes

// optional bytes hoststring = 4;
inline bool HostBytes::has_hoststring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HostBytes::set_has_hoststring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HostBytes::clear_has_hoststring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HostBytes::clear_hoststring() {
  hoststring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hoststring();
}
inline const ::std::string& HostBytes::hoststring() const {
  // @@protoc_insertion_point(field_get:HostBuffers.HostBytes.hoststring)
  return hoststring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostBytes::set_hoststring(const ::std::string& value) {
  set_has_hoststring();
  hoststring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HostBuffers.HostBytes.hoststring)
}
inline void HostBytes::set_hoststring(const char* value) {
  set_has_hoststring();
  hoststring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HostBuffers.HostBytes.hoststring)
}
inline void HostBytes::set_hoststring(const void* value, size_t size) {
  set_has_hoststring();
  hoststring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HostBuffers.HostBytes.hoststring)
}
inline ::std::string* HostBytes::mutable_hoststring() {
  set_has_hoststring();
  // @@protoc_insertion_point(field_mutable:HostBuffers.HostBytes.hoststring)
  return hoststring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HostBytes::release_hoststring() {
  // @@protoc_insertion_point(field_release:HostBuffers.HostBytes.hoststring)
  clear_has_hoststring();
  return hoststring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HostBytes::set_allocated_hoststring(::std::string* hoststring) {
  if (hoststring != NULL) {
    set_has_hoststring();
  } else {
    clear_has_hoststring();
  }
  hoststring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hoststring);
  // @@protoc_insertion_point(field_set_allocated:HostBuffers.HostBytes.hoststring)
}

inline const HostBytes* HostBytes::internal_default_instance() {
  return &HostBytes_default_instance_.get();
}
// -------------------------------------------------------------------

// EchoAck

// optional uint64 echo_ack_num = 8;
inline bool EchoAck::has_echo_ack_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoAck::set_has_echo_ack_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoAck::clear_has_echo_ack_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoAck::clear_echo_ack_num() {
  echo_ack_num_ = GOOGLE_ULONGLONG(0);
  clear_has_echo_ack_num();
}
inline ::google::protobuf::uint64 EchoAck::echo_ack_num() const {
  // @@protoc_insertion_point(field_get:HostBuffers.EchoAck.echo_ack_num)
  return echo_ack_num_;
}
inline void EchoAck::set_echo_ack_num(::google::protobuf::uint64 value) {
  set_has_echo_ack_num();
  echo_ack_num_ = value;
  // @@protoc_insertion_point(field_set:HostBuffers.EchoAck.echo_ack_num)
}

inline const EchoAck* EchoAck::internal_default_instance() {
  return &EchoAck_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace HostBuffers

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobufs_2fhostinput_2eproto__INCLUDED
