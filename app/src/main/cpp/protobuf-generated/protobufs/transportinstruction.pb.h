// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs/transportinstruction.proto

#ifndef PROTOBUF_protobufs_2ftransportinstruction_2eproto__INCLUDED
#define PROTOBUF_protobufs_2ftransportinstruction_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace TransportBuffers {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto();
void protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto();
void protobuf_AssignDesc_protobufs_2ftransportinstruction_2eproto();
void protobuf_ShutdownFile_protobufs_2ftransportinstruction_2eproto();

class Instruction;

// ===================================================================

class Instruction : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:TransportBuffers.Instruction) */ {
 public:
  Instruction();
  virtual ~Instruction();

  Instruction(const Instruction& from);

  inline Instruction& operator=(const Instruction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Instruction& default_instance();

  static const Instruction* internal_default_instance();

  void Swap(Instruction* other);

  // implements Message ----------------------------------------------

  inline Instruction* New() const { return New(NULL); }

  Instruction* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Instruction& from);
  void MergeFrom(const Instruction& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Instruction* other);
  void UnsafeMergeFrom(const Instruction& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 protocol_version = 1;
  bool has_protocol_version() const;
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 1;
  ::google::protobuf::uint32 protocol_version() const;
  void set_protocol_version(::google::protobuf::uint32 value);

  // optional uint64 old_num = 2;
  bool has_old_num() const;
  void clear_old_num();
  static const int kOldNumFieldNumber = 2;
  ::google::protobuf::uint64 old_num() const;
  void set_old_num(::google::protobuf::uint64 value);

  // optional uint64 new_num = 3;
  bool has_new_num() const;
  void clear_new_num();
  static const int kNewNumFieldNumber = 3;
  ::google::protobuf::uint64 new_num() const;
  void set_new_num(::google::protobuf::uint64 value);

  // optional uint64 ack_num = 4;
  bool has_ack_num() const;
  void clear_ack_num();
  static const int kAckNumFieldNumber = 4;
  ::google::protobuf::uint64 ack_num() const;
  void set_ack_num(::google::protobuf::uint64 value);

  // optional uint64 throwaway_num = 5;
  bool has_throwaway_num() const;
  void clear_throwaway_num();
  static const int kThrowawayNumFieldNumber = 5;
  ::google::protobuf::uint64 throwaway_num() const;
  void set_throwaway_num(::google::protobuf::uint64 value);

  // optional bytes diff = 6;
  bool has_diff() const;
  void clear_diff();
  static const int kDiffFieldNumber = 6;
  const ::std::string& diff() const;
  void set_diff(const ::std::string& value);
  void set_diff(const char* value);
  void set_diff(const void* value, size_t size);
  ::std::string* mutable_diff();
  ::std::string* release_diff();
  void set_allocated_diff(::std::string* diff);

  // optional bytes chaff = 7;
  bool has_chaff() const;
  void clear_chaff();
  static const int kChaffFieldNumber = 7;
  const ::std::string& chaff() const;
  void set_chaff(const ::std::string& value);
  void set_chaff(const char* value);
  void set_chaff(const void* value, size_t size);
  ::std::string* mutable_chaff();
  ::std::string* release_chaff();
  void set_allocated_chaff(::std::string* chaff);

  // @@protoc_insertion_point(class_scope:TransportBuffers.Instruction)
 private:
  inline void set_has_protocol_version();
  inline void clear_has_protocol_version();
  inline void set_has_old_num();
  inline void clear_has_old_num();
  inline void set_has_new_num();
  inline void clear_has_new_num();
  inline void set_has_ack_num();
  inline void clear_has_ack_num();
  inline void set_has_throwaway_num();
  inline void clear_has_throwaway_num();
  inline void set_has_diff();
  inline void clear_has_diff();
  inline void set_has_chaff();
  inline void clear_has_chaff();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr diff_;
  ::google::protobuf::internal::ArenaStringPtr chaff_;
  ::google::protobuf::uint64 old_num_;
  ::google::protobuf::uint64 new_num_;
  ::google::protobuf::uint64 ack_num_;
  ::google::protobuf::uint64 throwaway_num_;
  ::google::protobuf::uint32 protocol_version_;
  friend void  protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2ftransportinstruction_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2ftransportinstruction_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Instruction> Instruction_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Instruction

// optional uint32 protocol_version = 1;
inline bool Instruction::has_protocol_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Instruction::set_has_protocol_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Instruction::clear_has_protocol_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Instruction::clear_protocol_version() {
  protocol_version_ = 0u;
  clear_has_protocol_version();
}
inline ::google::protobuf::uint32 Instruction::protocol_version() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.protocol_version)
  return protocol_version_;
}
inline void Instruction::set_protocol_version(::google::protobuf::uint32 value) {
  set_has_protocol_version();
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.protocol_version)
}

// optional uint64 old_num = 2;
inline bool Instruction::has_old_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Instruction::set_has_old_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Instruction::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Instruction::clear_old_num() {
  old_num_ = GOOGLE_ULONGLONG(0);
  clear_has_old_num();
}
inline ::google::protobuf::uint64 Instruction::old_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.old_num)
  return old_num_;
}
inline void Instruction::set_old_num(::google::protobuf::uint64 value) {
  set_has_old_num();
  old_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.old_num)
}

// optional uint64 new_num = 3;
inline bool Instruction::has_new_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Instruction::set_has_new_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Instruction::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Instruction::clear_new_num() {
  new_num_ = GOOGLE_ULONGLONG(0);
  clear_has_new_num();
}
inline ::google::protobuf::uint64 Instruction::new_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.new_num)
  return new_num_;
}
inline void Instruction::set_new_num(::google::protobuf::uint64 value) {
  set_has_new_num();
  new_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.new_num)
}

// optional uint64 ack_num = 4;
inline bool Instruction::has_ack_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Instruction::set_has_ack_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Instruction::clear_has_ack_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Instruction::clear_ack_num() {
  ack_num_ = GOOGLE_ULONGLONG(0);
  clear_has_ack_num();
}
inline ::google::protobuf::uint64 Instruction::ack_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.ack_num)
  return ack_num_;
}
inline void Instruction::set_ack_num(::google::protobuf::uint64 value) {
  set_has_ack_num();
  ack_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.ack_num)
}

// optional uint64 throwaway_num = 5;
inline bool Instruction::has_throwaway_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Instruction::set_has_throwaway_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Instruction::clear_has_throwaway_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Instruction::clear_throwaway_num() {
  throwaway_num_ = GOOGLE_ULONGLONG(0);
  clear_has_throwaway_num();
}
inline ::google::protobuf::uint64 Instruction::throwaway_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.throwaway_num)
  return throwaway_num_;
}
inline void Instruction::set_throwaway_num(::google::protobuf::uint64 value) {
  set_has_throwaway_num();
  throwaway_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.throwaway_num)
}

// optional bytes diff = 6;
inline bool Instruction::has_diff() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Instruction::set_has_diff() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Instruction::clear_has_diff() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Instruction::clear_diff() {
  diff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_diff();
}
inline const ::std::string& Instruction::diff() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.diff)
  return diff_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instruction::set_diff(const ::std::string& value) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.diff)
}
inline void Instruction::set_diff(const char* value) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransportBuffers.Instruction.diff)
}
inline void Instruction::set_diff(const void* value, size_t size) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransportBuffers.Instruction.diff)
}
inline ::std::string* Instruction::mutable_diff() {
  set_has_diff();
  // @@protoc_insertion_point(field_mutable:TransportBuffers.Instruction.diff)
  return diff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instruction::release_diff() {
  // @@protoc_insertion_point(field_release:TransportBuffers.Instruction.diff)
  clear_has_diff();
  return diff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instruction::set_allocated_diff(::std::string* diff) {
  if (diff != NULL) {
    set_has_diff();
  } else {
    clear_has_diff();
  }
  diff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), diff);
  // @@protoc_insertion_point(field_set_allocated:TransportBuffers.Instruction.diff)
}

// optional bytes chaff = 7;
inline bool Instruction::has_chaff() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Instruction::set_has_chaff() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Instruction::clear_has_chaff() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Instruction::clear_chaff() {
  chaff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chaff();
}
inline const ::std::string& Instruction::chaff() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.chaff)
  return chaff_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instruction::set_chaff(const ::std::string& value) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.chaff)
}
inline void Instruction::set_chaff(const char* value) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransportBuffers.Instruction.chaff)
}
inline void Instruction::set_chaff(const void* value, size_t size) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransportBuffers.Instruction.chaff)
}
inline ::std::string* Instruction::mutable_chaff() {
  set_has_chaff();
  // @@protoc_insertion_point(field_mutable:TransportBuffers.Instruction.chaff)
  return chaff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instruction::release_chaff() {
  // @@protoc_insertion_point(field_release:TransportBuffers.Instruction.chaff)
  clear_has_chaff();
  return chaff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instruction::set_allocated_chaff(::std::string* chaff) {
  if (chaff != NULL) {
    set_has_chaff();
  } else {
    clear_has_chaff();
  }
  chaff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaff);
  // @@protoc_insertion_point(field_set_allocated:TransportBuffers.Instruction.chaff)
}

inline const Instruction* Instruction::internal_default_instance() {
  return &Instruction_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TransportBuffers

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobufs_2ftransportinstruction_2eproto__INCLUDED
