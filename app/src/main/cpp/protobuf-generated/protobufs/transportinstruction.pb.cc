// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs/transportinstruction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobufs/transportinstruction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace TransportBuffers {

void protobuf_ShutdownFile_protobufs_2ftransportinstruction_2eproto() {
  Instruction_default_instance_.Shutdown();
}

void protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Instruction_default_instance_.DefaultConstruct();
  Instruction_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto_once_);
void protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto_once_,
                 &protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto_impl);
}
void protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobufs_2ftransportinstruction_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto_once_);
void protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto_once_,
                 &protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto_impl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobufs_2ftransportinstruction_2eproto {
  StaticDescriptorInitializer_protobufs_2ftransportinstruction_2eproto() {
    protobuf_AddDesc_protobufs_2ftransportinstruction_2eproto();
  }
} static_descriptor_initializer_protobufs_2ftransportinstruction_2eproto_;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

static ::std::string* MutableUnknownFieldsForInstruction(
    Instruction* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Instruction::kProtocolVersionFieldNumber;
const int Instruction::kOldNumFieldNumber;
const int Instruction::kNewNumFieldNumber;
const int Instruction::kAckNumFieldNumber;
const int Instruction::kThrowawayNumFieldNumber;
const int Instruction::kDiffFieldNumber;
const int Instruction::kChaffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Instruction::Instruction()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransportBuffers.Instruction)
}

void Instruction::InitAsDefaultInstance() {
}

Instruction::Instruction(const Instruction& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransportBuffers.Instruction)
}

void Instruction::SharedCtor() {
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  diff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&old_num_, 0, reinterpret_cast<char*>(&protocol_version_) -
    reinterpret_cast<char*>(&old_num_) + sizeof(protocol_version_));
}

Instruction::~Instruction() {
  // @@protoc_insertion_point(destructor:TransportBuffers.Instruction)
  SharedDtor();
}

void Instruction::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  diff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chaff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Instruction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Instruction& Instruction::default_instance() {
  protobuf_InitDefaults_protobufs_2ftransportinstruction_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Instruction> Instruction_default_instance_;

Instruction* Instruction::New(::google::protobuf::Arena* arena) const {
  Instruction* n = new Instruction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:TransportBuffers.Instruction)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Instruction, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Instruction*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(old_num_, protocol_version_);
    if (has_diff()) {
      diff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_chaff()) {
      chaff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Instruction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForInstruction, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:TransportBuffers.Instruction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 protocol_version = 1;
      case 1: {
        if (tag == 8) {
          set_has_protocol_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_old_num;
        break;
      }

      // optional uint64 old_num = 2;
      case 2: {
        if (tag == 16) {
         parse_old_num:
          set_has_old_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &old_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_new_num;
        break;
      }

      // optional uint64 new_num = 3;
      case 3: {
        if (tag == 24) {
         parse_new_num:
          set_has_new_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &new_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ack_num;
        break;
      }

      // optional uint64 ack_num = 4;
      case 4: {
        if (tag == 32) {
         parse_ack_num:
          set_has_ack_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ack_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_throwaway_num;
        break;
      }

      // optional uint64 throwaway_num = 5;
      case 5: {
        if (tag == 40) {
         parse_throwaway_num:
          set_has_throwaway_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &throwaway_num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_diff;
        break;
      }

      // optional bytes diff = 6;
      case 6: {
        if (tag == 50) {
         parse_diff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_diff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_chaff;
        break;
      }

      // optional bytes chaff = 7;
      case 7: {
        if (tag == 58) {
         parse_chaff:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chaff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransportBuffers.Instruction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransportBuffers.Instruction)
  return false;
#undef DO_
}

void Instruction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransportBuffers.Instruction)
  // optional uint32 protocol_version = 1;
  if (has_protocol_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocol_version(), output);
  }

  // optional uint64 old_num = 2;
  if (has_old_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->old_num(), output);
  }

  // optional uint64 new_num = 3;
  if (has_new_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->new_num(), output);
  }

  // optional uint64 ack_num = 4;
  if (has_ack_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ack_num(), output);
  }

  // optional uint64 throwaway_num = 5;
  if (has_throwaway_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->throwaway_num(), output);
  }

  // optional bytes diff = 6;
  if (has_diff()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->diff(), output);
  }

  // optional bytes chaff = 7;
  if (has_chaff()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->chaff(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:TransportBuffers.Instruction)
}

size_t Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransportBuffers.Instruction)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional uint32 protocol_version = 1;
    if (has_protocol_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocol_version());
    }

    // optional uint64 old_num = 2;
    if (has_old_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->old_num());
    }

    // optional uint64 new_num = 3;
    if (has_new_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->new_num());
    }

    // optional uint64 ack_num = 4;
    if (has_ack_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ack_num());
    }

    // optional uint64 throwaway_num = 5;
    if (has_throwaway_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->throwaway_num());
    }

    // optional bytes diff = 6;
    if (has_diff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->diff());
    }

    // optional bytes chaff = 7;
    if (has_chaff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->chaff());
    }

  }
  total_size += unknown_fields().size();

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instruction::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Instruction*>(&from));
}

void Instruction::MergeFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransportBuffers.Instruction)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Instruction::UnsafeMergeFrom(const Instruction& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protocol_version()) {
      set_protocol_version(from.protocol_version());
    }
    if (from.has_old_num()) {
      set_old_num(from.old_num());
    }
    if (from.has_new_num()) {
      set_new_num(from.new_num());
    }
    if (from.has_ack_num()) {
      set_ack_num(from.ack_num());
    }
    if (from.has_throwaway_num()) {
      set_throwaway_num(from.throwaway_num());
    }
    if (from.has_diff()) {
      set_has_diff();
      diff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.diff_);
    }
    if (from.has_chaff()) {
      set_has_chaff();
      chaff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaff_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Instruction::CopyFrom(const Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransportBuffers.Instruction)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Instruction::IsInitialized() const {

  return true;
}

void Instruction::Swap(Instruction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Instruction::InternalSwap(Instruction* other) {
  std::swap(protocol_version_, other->protocol_version_);
  std::swap(old_num_, other->old_num_);
  std::swap(new_num_, other->new_num_);
  std::swap(ack_num_, other->ack_num_);
  std::swap(throwaway_num_, other->throwaway_num_);
  diff_.Swap(&other->diff_);
  chaff_.Swap(&other->chaff_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Instruction::GetTypeName() const {
  return "TransportBuffers.Instruction";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Instruction

// optional uint32 protocol_version = 1;
bool Instruction::has_protocol_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Instruction::set_has_protocol_version() {
  _has_bits_[0] |= 0x00000001u;
}
void Instruction::clear_has_protocol_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void Instruction::clear_protocol_version() {
  protocol_version_ = 0u;
  clear_has_protocol_version();
}
::google::protobuf::uint32 Instruction::protocol_version() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.protocol_version)
  return protocol_version_;
}
void Instruction::set_protocol_version(::google::protobuf::uint32 value) {
  set_has_protocol_version();
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.protocol_version)
}

// optional uint64 old_num = 2;
bool Instruction::has_old_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Instruction::set_has_old_num() {
  _has_bits_[0] |= 0x00000002u;
}
void Instruction::clear_has_old_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void Instruction::clear_old_num() {
  old_num_ = GOOGLE_ULONGLONG(0);
  clear_has_old_num();
}
::google::protobuf::uint64 Instruction::old_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.old_num)
  return old_num_;
}
void Instruction::set_old_num(::google::protobuf::uint64 value) {
  set_has_old_num();
  old_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.old_num)
}

// optional uint64 new_num = 3;
bool Instruction::has_new_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Instruction::set_has_new_num() {
  _has_bits_[0] |= 0x00000004u;
}
void Instruction::clear_has_new_num() {
  _has_bits_[0] &= ~0x00000004u;
}
void Instruction::clear_new_num() {
  new_num_ = GOOGLE_ULONGLONG(0);
  clear_has_new_num();
}
::google::protobuf::uint64 Instruction::new_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.new_num)
  return new_num_;
}
void Instruction::set_new_num(::google::protobuf::uint64 value) {
  set_has_new_num();
  new_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.new_num)
}

// optional uint64 ack_num = 4;
bool Instruction::has_ack_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Instruction::set_has_ack_num() {
  _has_bits_[0] |= 0x00000008u;
}
void Instruction::clear_has_ack_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void Instruction::clear_ack_num() {
  ack_num_ = GOOGLE_ULONGLONG(0);
  clear_has_ack_num();
}
::google::protobuf::uint64 Instruction::ack_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.ack_num)
  return ack_num_;
}
void Instruction::set_ack_num(::google::protobuf::uint64 value) {
  set_has_ack_num();
  ack_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.ack_num)
}

// optional uint64 throwaway_num = 5;
bool Instruction::has_throwaway_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Instruction::set_has_throwaway_num() {
  _has_bits_[0] |= 0x00000010u;
}
void Instruction::clear_has_throwaway_num() {
  _has_bits_[0] &= ~0x00000010u;
}
void Instruction::clear_throwaway_num() {
  throwaway_num_ = GOOGLE_ULONGLONG(0);
  clear_has_throwaway_num();
}
::google::protobuf::uint64 Instruction::throwaway_num() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.throwaway_num)
  return throwaway_num_;
}
void Instruction::set_throwaway_num(::google::protobuf::uint64 value) {
  set_has_throwaway_num();
  throwaway_num_ = value;
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.throwaway_num)
}

// optional bytes diff = 6;
bool Instruction::has_diff() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Instruction::set_has_diff() {
  _has_bits_[0] |= 0x00000020u;
}
void Instruction::clear_has_diff() {
  _has_bits_[0] &= ~0x00000020u;
}
void Instruction::clear_diff() {
  diff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_diff();
}
const ::std::string& Instruction::diff() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.diff)
  return diff_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instruction::set_diff(const ::std::string& value) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.diff)
}
void Instruction::set_diff(const char* value) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransportBuffers.Instruction.diff)
}
void Instruction::set_diff(const void* value, size_t size) {
  set_has_diff();
  diff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransportBuffers.Instruction.diff)
}
::std::string* Instruction::mutable_diff() {
  set_has_diff();
  // @@protoc_insertion_point(field_mutable:TransportBuffers.Instruction.diff)
  return diff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instruction::release_diff() {
  // @@protoc_insertion_point(field_release:TransportBuffers.Instruction.diff)
  clear_has_diff();
  return diff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instruction::set_allocated_diff(::std::string* diff) {
  if (diff != NULL) {
    set_has_diff();
  } else {
    clear_has_diff();
  }
  diff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), diff);
  // @@protoc_insertion_point(field_set_allocated:TransportBuffers.Instruction.diff)
}

// optional bytes chaff = 7;
bool Instruction::has_chaff() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Instruction::set_has_chaff() {
  _has_bits_[0] |= 0x00000040u;
}
void Instruction::clear_has_chaff() {
  _has_bits_[0] &= ~0x00000040u;
}
void Instruction::clear_chaff() {
  chaff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chaff();
}
const ::std::string& Instruction::chaff() const {
  // @@protoc_insertion_point(field_get:TransportBuffers.Instruction.chaff)
  return chaff_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instruction::set_chaff(const ::std::string& value) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransportBuffers.Instruction.chaff)
}
void Instruction::set_chaff(const char* value) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransportBuffers.Instruction.chaff)
}
void Instruction::set_chaff(const void* value, size_t size) {
  set_has_chaff();
  chaff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransportBuffers.Instruction.chaff)
}
::std::string* Instruction::mutable_chaff() {
  set_has_chaff();
  // @@protoc_insertion_point(field_mutable:TransportBuffers.Instruction.chaff)
  return chaff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Instruction::release_chaff() {
  // @@protoc_insertion_point(field_release:TransportBuffers.Instruction.chaff)
  clear_has_chaff();
  return chaff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Instruction::set_allocated_chaff(::std::string* chaff) {
  if (chaff != NULL) {
    set_has_chaff();
  } else {
    clear_has_chaff();
  }
  chaff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chaff);
  // @@protoc_insertion_point(field_set_allocated:TransportBuffers.Instruction.chaff)
}

inline const Instruction* Instruction::internal_default_instance() {
  return &Instruction_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TransportBuffers

// @@protoc_insertion_point(global_scope)
