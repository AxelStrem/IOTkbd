// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs/userinput.proto

#ifndef PROTOBUF_protobufs_2fuserinput_2eproto__INCLUDED
#define PROTOBUF_protobufs_2fuserinput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace ClientBuffers {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_protobufs_2fuserinput_2eproto();
void protobuf_InitDefaults_protobufs_2fuserinput_2eproto();
void protobuf_AssignDesc_protobufs_2fuserinput_2eproto();
void protobuf_ShutdownFile_protobufs_2fuserinput_2eproto();

class Instruction;
class Keystroke;
class UserMessage;

// ===================================================================

class UserMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ClientBuffers.UserMessage) */ {
 public:
  UserMessage();
  virtual ~UserMessage();

  UserMessage(const UserMessage& from);

  inline UserMessage& operator=(const UserMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const UserMessage& default_instance();

  static const UserMessage* internal_default_instance();

  void Swap(UserMessage* other);

  // implements Message ----------------------------------------------

  inline UserMessage* New() const { return New(NULL); }

  UserMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserMessage& from);
  void MergeFrom(const UserMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserMessage* other);
  void UnsafeMergeFrom(const UserMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ClientBuffers.Instruction instruction = 1;
  int instruction_size() const;
  void clear_instruction();
  static const int kInstructionFieldNumber = 1;
  const ::ClientBuffers::Instruction& instruction(int index) const;
  ::ClientBuffers::Instruction* mutable_instruction(int index);
  ::ClientBuffers::Instruction* add_instruction();
  ::google::protobuf::RepeatedPtrField< ::ClientBuffers::Instruction >*
      mutable_instruction();
  const ::google::protobuf::RepeatedPtrField< ::ClientBuffers::Instruction >&
      instruction() const;

  // @@protoc_insertion_point(class_scope:ClientBuffers.UserMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ClientBuffers::Instruction > instruction_;
  friend void  protobuf_InitDefaults_protobufs_2fuserinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fuserinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fuserinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fuserinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserMessage> UserMessage_default_instance_;

// -------------------------------------------------------------------

class Instruction : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ClientBuffers.Instruction) */ {
 public:
  Instruction();
  virtual ~Instruction();

  Instruction(const Instruction& from);

  inline Instruction& operator=(const Instruction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Instruction& default_instance();

  static const Instruction* internal_default_instance();

  void Swap(Instruction* other);

  // implements Message ----------------------------------------------

  inline Instruction* New() const { return New(NULL); }

  Instruction* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Instruction& from);
  void MergeFrom(const Instruction& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Instruction* other);
  void UnsafeMergeFrom(const Instruction& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Instruction)
  // @@protoc_insertion_point(class_scope:ClientBuffers.Instruction)
 private:

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_protobufs_2fuserinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fuserinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fuserinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fuserinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Instruction> Instruction_default_instance_;

// -------------------------------------------------------------------

class Keystroke : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:ClientBuffers.Keystroke) */ {
 public:
  Keystroke();
  virtual ~Keystroke();

  Keystroke(const Keystroke& from);

  inline Keystroke& operator=(const Keystroke& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const Keystroke& default_instance();

  static const Keystroke* internal_default_instance();

  void Swap(Keystroke* other);

  // implements Message ----------------------------------------------

  inline Keystroke* New() const { return New(NULL); }

  Keystroke* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Keystroke& from);
  void MergeFrom(const Keystroke& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Keystroke* other);
  void UnsafeMergeFrom(const Keystroke& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes keys = 4;
  bool has_keys() const;
  void clear_keys();
  static const int kKeysFieldNumber = 4;
  const ::std::string& keys() const;
  void set_keys(const ::std::string& value);
  void set_keys(const char* value);
  void set_keys(const void* value, size_t size);
  ::std::string* mutable_keys();
  ::std::string* release_keys();
  void set_allocated_keys(::std::string* keys);

  // @@protoc_insertion_point(class_scope:ClientBuffers.Keystroke)
 private:
  inline void set_has_keys();
  inline void clear_has_keys();

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keys_;
  friend void  protobuf_InitDefaults_protobufs_2fuserinput_2eproto_impl();
  friend void  protobuf_AddDesc_protobufs_2fuserinput_2eproto_impl();
  friend void protobuf_AssignDesc_protobufs_2fuserinput_2eproto();
  friend void protobuf_ShutdownFile_protobufs_2fuserinput_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Keystroke> Keystroke_default_instance_;

// ===================================================================

static const int kKeystrokeFieldNumber = 2;
extern ::google::protobuf::internal::ExtensionIdentifier< ::ClientBuffers::Instruction,
    ::google::protobuf::internal::MessageTypeTraits< ::ClientBuffers::Keystroke >, 11, false >
  keystroke;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserMessage

// repeated .ClientBuffers.Instruction instruction = 1;
inline int UserMessage::instruction_size() const {
  return instruction_.size();
}
inline void UserMessage::clear_instruction() {
  instruction_.Clear();
}
inline const ::ClientBuffers::Instruction& UserMessage::instruction(int index) const {
  // @@protoc_insertion_point(field_get:ClientBuffers.UserMessage.instruction)
  return instruction_.Get(index);
}
inline ::ClientBuffers::Instruction* UserMessage::mutable_instruction(int index) {
  // @@protoc_insertion_point(field_mutable:ClientBuffers.UserMessage.instruction)
  return instruction_.Mutable(index);
}
inline ::ClientBuffers::Instruction* UserMessage::add_instruction() {
  // @@protoc_insertion_point(field_add:ClientBuffers.UserMessage.instruction)
  return instruction_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ClientBuffers::Instruction >*
UserMessage::mutable_instruction() {
  // @@protoc_insertion_point(field_mutable_list:ClientBuffers.UserMessage.instruction)
  return &instruction_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ClientBuffers::Instruction >&
UserMessage::instruction() const {
  // @@protoc_insertion_point(field_list:ClientBuffers.UserMessage.instruction)
  return instruction_;
}

inline const UserMessage* UserMessage::internal_default_instance() {
  return &UserMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// Instruction

inline const Instruction* Instruction::internal_default_instance() {
  return &Instruction_default_instance_.get();
}
// -------------------------------------------------------------------

// Keystroke

// optional bytes keys = 4;
inline bool Keystroke::has_keys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Keystroke::set_has_keys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Keystroke::clear_has_keys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Keystroke::clear_keys() {
  keys_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keys();
}
inline const ::std::string& Keystroke::keys() const {
  // @@protoc_insertion_point(field_get:ClientBuffers.Keystroke.keys)
  return keys_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Keystroke::set_keys(const ::std::string& value) {
  set_has_keys();
  keys_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientBuffers.Keystroke.keys)
}
inline void Keystroke::set_keys(const char* value) {
  set_has_keys();
  keys_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientBuffers.Keystroke.keys)
}
inline void Keystroke::set_keys(const void* value, size_t size) {
  set_has_keys();
  keys_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientBuffers.Keystroke.keys)
}
inline ::std::string* Keystroke::mutable_keys() {
  set_has_keys();
  // @@protoc_insertion_point(field_mutable:ClientBuffers.Keystroke.keys)
  return keys_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Keystroke::release_keys() {
  // @@protoc_insertion_point(field_release:ClientBuffers.Keystroke.keys)
  clear_has_keys();
  return keys_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Keystroke::set_allocated_keys(::std::string* keys) {
  if (keys != NULL) {
    set_has_keys();
  } else {
    clear_has_keys();
  }
  keys_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keys);
  // @@protoc_insertion_point(field_set_allocated:ClientBuffers.Keystroke.keys)
}

inline const Keystroke* Keystroke::internal_default_instance() {
  return &Keystroke_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ClientBuffers

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobufs_2fuserinput_2eproto__INCLUDED
